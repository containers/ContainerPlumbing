bootc - A new project for bootable containers,Colin Walters,,"Red Hat, Inc.",Presentation (25min),Container OSes,bootc,"This presentation will take a look at the new github.com/containers/bootc project - what does it mean to install and *boot* a host system via a container image?  We'll see how this enables powerful customization and control, while allowing Linux administrators to build on every tool and technique they already know from creating application container images."
Building an oomkill-exporter powered by eBPF in 5 minutes,Krisztian Fekete,,solo.io,Lightning Talk (5min),"Container Runtimes, cGroups, Namespaces, Kernel, Containers & Virtualization, eBPF","solo-io/bumblebee, Prometheus","Catching oomkills is an essential, but not trivial thing to do, especially in Kubernetes clusters. Many of the existing solutions have various issues, or even limitations, and the infamous ""invisible"" oomkills are one the worst nightmares an SRE can possible have during on-call. Fortunately, eBPF is here to help! In this talk, we will build a Prometheus exporter, so you can sleep better at night, knowing that the oomkiller cannot get away killing your processes without triggering an alert!"
"Compose to Kubernetes: Caveats, interoperability and transformations",Charlie Drage,,Red Hat,Lightning Talk (5min),"Containers & Virtualization, Image formats & standards","Kompose, Docker Compose, Podman and Podman Desktop","This presentation will cover the 1-1 translations from Docker Compose to Kubernetes as well as the difficulties and the caveats.

We will cover:
- The pitfalls going from Compose to Kubernetes / stuff that does not translate
- How we get around said pitfalls with labels / asking the user
- How projects such as Skaffold use Kompose
- How future projects such as Podman and Podman Desktop hope to achieve in converting from Compose to Kubernetes."
Compress memory you do not need,Antti Kervinen,Alexander Kanevskiy,Intel,Presentation (25min),"Container Runtimes, cGroups, Namespaces, Kernel, Containers & Virtualization",github.com/intel/cri-resource-manager,"Many workloads actively use only a fraction of the memory they allocate. This opens up possibilities to use RAM smarter. Memtierd is an open source tool that runs in user space, tracks memory activity of processes in Linux cgroups, and takes actions based on detected activity and given configuration. Actions include moving memory between NUMA nodes and swapping it in or out. In our demo we use memtierd for compressing inactive application memory into RAM, resulting in more free memory for other applications and the operating system. We also use memtierd for inspecting how much of the memory of a process is in different activity levels, and we share our learnings on how user space tools in general can track memory, control moving it around and page out memory of other processes in Linux."
Container IMA using eBPF,Avery Blanchard,Lily Sturmann,Red Hat,Presentation (25min),"cGroups, Namespaces, Kernel, eBPF, Container Integrity, Security ",Container IMA,"With the ubiquity of container-based virtualization, the ability to ensure trust in a container is a pertinent security issue. The mechanism in the Linux kernel for measuring integrity within a system, Integrity Measurement Architecture IMA, does not support Linux containers. This leaves a substantial gap in container integrity and trust. I present a solution to this problem by implementing a run-time solution for continuous integrity monitoring of Linux containers without changes to the kernel. I extend the Integrity Measurement Architecture to Linux containers through the use of a loadable kernel module, software emulated TPMs, and eBPF. This presentation explores the design, implementation, and future work to be done to measure container integrity."
Containers in Cars,Daniel J Walsh,,Red Hat,Presentation (25min),"Container Runtimes, Container OSes, Containers & Virtualization",Podman & https://wiki.centos.org/SpecialInterestGroup/Automotive,This talk will cover all of the issues and features we have been adding to make containers work well in edge devices like automobiles.
Finch: Streamlining Container Development with an Open Source stack,Ziwen Ning,Chandru Pokala,Amazon Web Services,Presentation (25min),"Container Runtimes, Image Building, Containers & Virtualization, Finch",Finch,"Finch is an open-source client that simplifies container development by providing a minimal native client and an opinionated distribution of other open-source components. In this session, we will introduce and demonstrate the features of Finch, including its simple installer, native client, and integration with nerdctl, containerd, and BuildKit. Attendees will learn about the benefits of Finch's approach to container development and how it streamlines the process for users. They will also learn about the integration of Finch with other open-source components and how it works within a virtual machine managed by Lima."
Future of CRI and Container Runtimes,Mrunal Patel,"Peter Hunt, Alexander Kanevskiy, Sascha Grunet, Michael Brown",Varies,Discussion,Container Runtimes,"CRI, Containerd, CRI-O","What's coming next for containerd, CRI-O, and the Container Runtime Interface? Join our panel of contributors to container runtimes to discuss development, features, and trends that will affect how we run and use containers."
Get ready for Arm64 and an ARMful of container build cases,Syl Taylor,Ovidiu Valeanu,Amazon Web Services,Presentation (25min),"Container Runtimes, Image Building, Alternate Architectures/Platforms","Container build cases will showcase multiple open-source projects such as emscripten, tensorflow, vagrant, etc.","There is an ever-increasing demand for compute in modern workloads. To help reduce costs and carbon footprint at scale, alternative CPU architectures such as the now-mainstream arm64 were introduced. However, still to the community's surprise, container builds continue to fail as not all software is platform-agnostic. A developer can encounter package install errors, missing dependencies and older versions not being supported. In addition, knowing which package source or version to use can bring significant performance improvements. We'll show you in this session practical examples of solving container image build issues and porting to arm64/aarch64 successfully."
Hash-based detection of confidential files in container images,Holger Gantikow,Kevin Kaftan,"science+computing AG, an Atos company",Lightning Talk (5min),Container/Image Security/SBOM,Trivy,"The risk of unintentional disclosure of confidential data increases when container images are passed on to third parties or are made publicly available.

To minimize this risk, we have extended the Trivy security scanner by a plugin that can be used to detect appropriately classified files. For this purpose, an external database is used as the data source, which contains the corresponding classifications."
Introduction to NRI,Krisztian Litkey,"Peter Hunt, Redhat",Intel,Presentation (25min),Container Runtimes,"CRI-O, containerd, NRI","The Node Resource Interface allows one to plug custom logic into NRI-enabled OCI-compatible runtimes and adjust the configuration of containers managed by that runtime. The recently released 0.2.0 version reworks how plugins communicate with the runtime, how plugins adjust container configuration, and what configuration parameters plugins can adjust through NRI. 0.2.0 is also the first version which is supported by the most commonly used container runtime implementations in Kubernetes: CRI-O and containerd.

While NRI is still experimental, this latest release already allows one to plug some interesting and useful functionality into runtimes. In our talk, we briefly discuss how NRI works and what kind of controls it provides over containers. Then we’ll demonstrate some of NRI’s current capabilities in practice using existing NRI plugins."
Killing in the name of eBPF,Holger Gantikow,Cedric Casper,"science+computing AG, an Atos company",Lightning Talk (5min),eBPF,"eBPF, Podman","In environments open to bring-your-own-code scenarios, user-provided containers are often given a lower trust status and additional safeguards are enabled. These include Seccomp profiles.
Seccomp can be used to restrict processes in a container, by providing the possibility to deny actions on a system call basis. To extend these capabilities we have written a service based on eBPF that detects corresponding violations and reliably terminates the corresponding Podman container. Filters can be applied to monitor only specific users or containers."
Lazy Distribution of Container Images on Podman and CRI-O With Additional Layer Store Plugin,Kohei Tokunaga,,NTT,Presentation (25min),"Container Runtimes, Image Building, Image formats & standards, Image transports","- Podman
- CRI-O
- Stargz Snapshotter/Stargz Store
- Kubernetes","Pulling images is one of the most time-consuming steps in the container lifecycle. In this session, Kohei will talk about faster image distribution leveraging ""Additional Layer Store"" plugin of Podman/CRI-O with eStargz and zstd:chunked image formats. They are OCI-alternative but OCI-compatible image formats enabling ""lazy pulling"": starting up containers before the entire contents become locally available. The talk will share how Podman and CRI-O's Additional Layer Store plugin can leverage these formats for faster container startup. We will also cover recent efforts for the related tools including image creation. Through this session, we hope to encourage discussion about the plugin and image formats in the community for further improvement and adoption. People can learn about the latest status of lazy pulling and how they can leverage Additional Layer Store plugin for faster image distribution."
Let's Fix Logging Once and For All,Peter Portante,,"Red Hat, Inc",Presentation (25min),"Container Runtimes, Container OSes, eBPF",conmon,"Do you know of an operating system in existence today which accepts a byte stream of data through an API, reads every byte of that data stream to determine how to add data to it and change its own operational behavior based on the contents?  The container logging sub-systems today do exactly that (see https://github.com/containers/conmon/issues/262).  We'll propose a fix for the ""logging problem"" using eBPF to solve this problem once and for all.  This will be an updated version of https://www.p99conf.io/session/lets-fix-logging-once-and-for-all/."
"Look ma, No Terminal: Podman Desktop for Containers & Kubernetes",Urvashi Mohnani,Ashley Cui,Red Hat,Presentation (25min),Containers on alternate OSes,"Podman
Podman-desktop
Kubernetes","A common challenge new users face when adopting containers is the lack of a tangible ui – having to learn all these new concepts _and_ use a terminal can be quite overwhelming! Well, this is no longer the case. Podman Desktop makes it easy for anyone to manage their containers, create images, and even deploy to Kubernetes, on any operating system! We’ll be demonstrating how Podman Desktop gives you a simple interface to manage your containers and images. We’ll also take a look underneath the hood at the technology that enables Podman Desktop - changes in Podman Machine that improve your experience running linux containers in non-linux environments. We will further discuss updates to the kube generate and play commands that developers easily transition their applications from a single node environment to a kubernetes cluster, as well as demonstrate Podman Desktop’s ability to deploy to kubernetes. "
Management of Long-lived Servers: The Missing Bits for Avoiding Config Drift with Declarative Configuration and Image-based Updates,Kai Lüke,,Microsoft,Presentation (25min),Container OSes,Flatcar Container Linux,"Rethinking the OS to improve server management in the era of containers and the cloud started a decade ago. The concepts present in container-optimized distributions aim for automation, declarative configuration, and reduced complexity. The user should gain reproducible server setups without config drifts. However, out of my experience in developing Flatcar Container Linux, I think the container-OS community did not fully solve this problem yet. There are some gaps to fill for reliable management of long-lived servers. Redeploying a whole cluster to apply a configuration change shouldn't be the final answer. What approaches could help to prevent config drift in the last areas where it's found? I think we should equip users with additional tools to control local state. The systemd project developed system extension (overlay) images which could play a foundational role. At the same time, distributions and upstream projects should make it easier to auto-update configuration files and ensure that default configuration is separate from user-supplied configuration. I will present some work-in-progress solutions but also hope for further explorations to happen. Only then can we address the traps and inconveniences with running manage long-lived servers."
Modifying the Immutable: Attaching Artifacts to OCI Images,Brandon Mitchell,,"BoxBoat, an IBM Company",Presentation (25min),"Container/Image Security/SBOM, Image formats & standards, Image transports",OCI,"Images are now being pushed to OCI registries with more and more metadata, including attestations, signatures, and SBOMs. What is involved with adding your own artifacts? This talk walks through how OCI recently standardized the process, and describes how additional data can be added to an image with an immutable digest. You'll learn how tooling can ship SBOMs along side images, both for the vendor generating the SBOM and the user searching for it. And this talk will cover many of the gotchas you may encounter when implementing this yourself."
Podman Desktop - Simplifying the experience working with containers and Kubernetes,Stevan Le Meur,Florent Benoit,Red Hat,Presentation (25min),Containers & Virtualization,https://github.com/containers/podman-desktop,"Going from application code to containers running on Kubernetes is not easy. In this session, we will show how Podman Desktop simplifies the developer's journey to deliver containerized applications from local development environments. This session will focus on demos and examples showing how to leverage Podman Desktop to move from containers to pod to Kubernetes with a consistent delivery. "
Running Confidential Workloads with Podman,Sergio Lopez,,Red Hat,Presentation (25min),"Container Runtimes, Container/Image Security/SBOM, Image Building, Containers & Virtualization","podman, crun, libkrun, oci2cw, reference-kbs","While Confidential Computing technologies have been available for quite some time, limitations on the software stack still put a significant entry barrier for users willing to adopt them. In this presentation, we'll show the work we've done to enable the container tools to build and deploy Confidential Workloads (a specialized kind of workload that preserves some of the container's semantics), leveraging on the Confidential Computing functionality provided by libkrun and crun's extensibility, bringing that technology to the users through a familiar UX."
State of OCI,Scott McCarty,,Red Hat,Presentation (25min),Images,OCI,"Scott will bring us up to date on what's happening with OCI, and container image standards."
Testing Container Images with Python and Pytest,Dan Čermák,,SUSE,Presentation (25min),"Testing, CI & QA","python, pytest, pytest_container","To ease the pain of testing container images, we've developed the pytest_container plugin for pytest. The plugin makes it possible to use pytest to perform tests on containers and software inside containers. You don't have to take care of pulling images, building them, or picking ports on the host. You just describe your container setup and pass it to a test function. In return, the plugin gives you a connection to the container. Using the connection, you can verify the container's state using the testinfra python framework. The plugin even cleans up after itself when you're done.

In short, pytest_container makes it possible to write tests in Python: no need to build your own framework from scratch or worry about the boring container plumbing tasks.

Join this talk to see pytest_container in action and learn how it can make your life easier!"
vfkit - a minimal hypervisor using Apple's virtualization framework,Christophe Fergeau,,Red Hat,Presentation (25min),"Container Runtimes, Alternate Architectures/Platforms, Containers on alternate OSes",The talk will be centered around vfkit with mentions of podman and crc,"vfkit is a new open source macOS hypervisor written in go. It uses Apple's virtualization framework which allows for a very small codebase. This talk will give a quick introduction to Apple's virtualization framework, then we'll see which features are provided by vfkit, and why it's a good fit for crc and podman-machine to run linux containers on macOS."
WASM/WASI and Cloud Ecosystem,Aditya R,Giuseppe Scrivano,Red Hat,Presentation (25min),WASM,"Crun, WASM",Session is about discussing how container runtime can leverage web assembly runtime so existing container infrastructure can be used to run WebAssembly workload.
Why was nerdctl made?,Akihiro Suda,,NTT,Presentation (25min),"Container Runtimes, Container/Image Security/SBOM, Image Building, Image formats & standards, Image transports, Containers and filesystem storage","nerdctl, containerd, stargz snapshotter, ocicrypt, cosign, bypass4netns, buildg, and more","nerdctl (contaiNERD CTL) was made to facilitate development of new technologies in the containerd platform.

Such technologies include:
- Lazy-pulling with Stargz/Nydus/OverlayBD
- P2P image distribution with IPFS
- Image encryption with OCIcrypt
- Image signing with Cosign
- ""Real"" read-only mounts with mount_setattr
- Slirp-less rootless containers with bypass4netns
- Interactive debugging of Dockerfiles, with buildg

nerdctl is also useful for debugging Kubernetes nodes that are running containerd.

Through this session, the audiences will learn these functionalities of nerdctl, relevant projects, and the roadmap for the future."
Windows containers: The forgotten stepchild,Jamie Magee,,Microsoft,Presentation (25min),"Container OSes, Container/Image Security/SBOM, Containers on alternate OSes",All demo code will be released under MIT license. It is not part of an existing open source project,"When it comes to Linux containers, there are plenty of tools out there that can scan container images, generate Software Bill of Materials (SBOM), or list vulnerabilities. However, Windows container images are more like the forgotten stepchild in the container ecosystem. And that means we’re forgetting the countless developers using Windows containers, too.

Instead of allowing this gap to widen further, container tool authors—especially SBOM tools and vulnerability scanners—need to add support for Windows container images.

In this presentation I’ll show you how to extract version information from Windows containers images that can be used to generate SBOMs, as well as how to integrate with the Microsoft Security Updates API which can provide detailed vulnerability information."
